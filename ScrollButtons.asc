// new module script



//int buttonGraph[25];
int scrollPosition = 0;

function openCharacterGUI(Character* thisIsWho)
{
  gCharacters.X=player.x-20;
  gCharacters.Y=player.y-90;
  btnCharacterChoice.Animate(buttonGraph[scrollPosition], 0, 5, eRepeat, eNoBlock);  //starts the animation since we have to start it before we can open it
  
  //thisIsWho = WhoAmITalkingTo;
  WhoAmITalkingTo = thisIsWho;
  gCharacters.Visible = true;
}


function talkToChar()
{
  
  switch(WhoAmITalkingTo)
  {
   case cAlien:
      switch(WhoAmITalkingAbout) //this is who I'm talking to
      {
        case cAlien:
        //talking to Alien about the Alien
        break;
        case cDracula:
        player.Say("Tell me about Dracula.");
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        player.Say("Tell me about The Alien!");
        break;
      }
    break;
    
   case cDracula:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking to Dracula about the Alien
        player.Say("Tell me about Dracula!");
        break;
        case cDracula:
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        break;
      }
    break;
    
    case cFrank:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking Frank about the Alien 
        break;
        case cDracula:
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        break;
      }
    break;
    
    case cMummy:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking to Mummy about the Alien
        break;
        case cDracula:
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        break;
      }
    break;
    
    case cPhantom:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking to Phantom about the Alien
        break;
        case cDracula:
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        break;
      }
    break;
    
    case cWolfie:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking to Wolfie about the Alien
        break;
        case cDracula:
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        break;
      }
    break;
    
    case cYoko:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking to BrunchLadies about the Alien
        break;
        case cDracula:
        break;
        case cFrank:
        break;
        case cMummy:
        break;
        case cPhantom:
        break;
        case cWolfie:
        break;
        case cYoko:
        break;
        case cRobot:
        break;
      }
    break;
    
    case cRobot:
      switch(WhoAmITalkingAbout)
      {
        case cAlien:
        //talking to Robot about the Alien
        player.Say("I wanna hear about the robot!");
        break;
        case cDracula:
        cRobot.sayCustom("Dracula!",eCharMoodSad);
        dialog[PreviousDialog].Start();
        break;
        case cFrank:
        break;
        case cMummy:
          player.sayCustom("What's so great about the mummy, anyway?");
          cRobot.isSurprised();
          cRobot.sayCustom("Oh, everything, really!");
          cRobot.sayCustom("I want to taste one of her cookies so badly.");
          cRobot.sayCustom("I cannot ingest food however.");
          cRobot.sayCustom("Nor do I have the emotional capacity to taste like others describe it.",eCharMoodSad);
          player.sayCustom("But do you have emotional capacity at all?");
          cRobot.isSurprised();
          cRobot.sayCustom("I have a single capacitor for emotion, yes.");
          cRobot.sayCustom("It is for love.");
          cRobot.sayCustom("And I save it for Hatshepsut.");
          player.isSurprised();
        break;
        case cPhantom:
        break;
        case cWolfie:
          
        break;
        case cYoko:
        break;
        case cRobot:
          player.sayCustom("So, tell me about yourself.");
        break;
      }
    break;
  }    
}




/*
function ScrollLeft()              This is the old scrolling functions I replaced with the ones that populate based on characters met
{
  BackgroundGraphic--;
  if (BackgroundGraphic==-1){
    BackgroundGraphic=7;
  }
    switch (BackgroundGraphic)
    {
      case 0:
        
        btnCharacterChoice.Animate(42, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 1:
      
        btnCharacterChoice.Animate(43, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 2:
      
        btnCharacterChoice.Animate(44, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 3:
      
        btnCharacterChoice.Animate(45, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 4:
      
        btnCharacterChoice.Animate(46, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 5:
      
        btnCharacterChoice.Animate(78, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 6:
      
        btnCharacterChoice.Animate(79, 0, 5, eRepeat, eNoBlock);
        break;
      
      case 7:
       
        btnCharacterChoice.Animate(41, 0, 5, eRepeat, eNoBlock);
        break;
      
      //case 8:
      //BackgroundGraphic=0;
      //break;
    }
}
*/



/*
function ScrollRight()
{
  /*
  //BackgroundGraphic=CharactersMet.ItemCount;
  BackgroundGraphic++;
  if (BackgroundGraphic==8){
    BackgroundGraphic=0;
  }
    switch (BackgroundGraphic)
    {
      case 0:
        
        btnCharacterChoice.Animate(42, 0, 5, eRepeat, eNoBlock);
        labelWhoAmITalkingAbout.Text=String.Format("Dracula!");
        WhoAmITalkingAbout=cDracula;
        break;
      
      case 1:
      
        btnCharacterChoice.Animate(43, 0, 5, eRepeat, eNoBlock);
       WhoAmITalkingAbout=cFrank;
        break;
      
      case 2:
      
        btnCharacterChoice.Animate(44, 0, 5, eRepeat, eNoBlock);
        WhoAmITalkingAbout=cMummy;
        break;
      
      case 3:
      
        btnCharacterChoice.Animate(45, 0, 5, eRepeat, eNoBlock);
        WhoAmITalkingAbout=cPhantom;
        break;
      
      case 4:
      
        btnCharacterChoice.Animate(46, 0, 5, eRepeat, eNoBlock);
        WhoAmITalkingAbout=cWolfie;
        break;
      
      case 5:
      
        btnCharacterChoice.Animate(78, 0, 5, eRepeat, eNoBlock);
        WhoAmITalkingAbout=cYoko;
        break;
      
      case 6:
      
        btnCharacterChoice.Animate(79, 0, 5, eRepeat, eNoBlock);
        WhoAmITalkingAbout=cRobot;
        break;
      
      case 7:
        
        btnCharacterChoice.Animate(41, 0, 5, eRepeat, eNoBlock);
        WhoAmITalkingAbout=cAlien;
        break;
    
    
    }
    
    
    
    BackgroundGraphic=CharactersMet.ItemCount;
    BackgroundGraphic++;
    if (BackgroundGraphic==CharactersMet.ItemCount){
      BackgroundGraphic=0;
    }
    
    switch (BackgroundGraphic){
     case 0: 
      if (CharactersMet.Contains("Dracula")){
      btnCharacterChoice.Animate(42, 0, 5, eRepeat, eNoBlock);
      WhoAmITalkingAbout=cDracula;
      break;
      }
    }
    
}
*/
function closeCharacterGui(Character* whoImTalkingAbout)
{

  

  switch (btnCharacterChoice.View){
    
    case (DRACULA_BUTTON):
    WhoAmITalkingAbout=cDracula;
    break;
    
    case (FRANK_BUTTON):
    WhoAmITalkingAbout=cFrank;
    break;
    
    case (MUMMY_BUTTON):
    WhoAmITalkingAbout=cMummy;
    break;
    
    case (PHANTOM_BUTTON):
    WhoAmITalkingAbout=cPhantom;
    break;
    
    case (WOLFIE_BUTTON):
    WhoAmITalkingAbout=cWolfie;
    break;
    
    case (BRUNCHERS_BUTTON):
    WhoAmITalkingAbout=cYoko;
    break;
    
    case (ROBOT_BUTTON):
    WhoAmITalkingAbout=cRobot;
    break;
  }
  
gCharacters.Visible=false;
talkToChar();

}



//===========================================================================================Populate the Scrolling Script



function initButtonGraph()
{
  //runs in game-start,  sets every slot in the array to 0.
  for (int i = 0; i < Game.CharacterCount; i++)
  {
    
    
    buttonGraph[i] = 0;
    
  }
}

function setFirstButtonGraphIndex(int theGraphic)
{
  for (int i = 0; i < 15; i++)
  {
    if(buttonGraph[i] == 0)
    {
      buttonGraph[i] = theGraphic; //sets the first 0 it finds to the graphic you put into this function
      return;
    }
  }
}



int findMaxScrollPosition()
{
  for (int i = 15; i > -1; i--)
  {
    if(buttonGraph[i] != 0)
    {
      return i;
    }
  }
  return 0;
}

function ScrollLeft()
{
  if(scrollPosition == 0)
  {
    scrollPosition = findMaxScrollPosition();
  } else {
    scrollPosition--;
  }
  btnCharacterChoice.Animate(buttonGraph[scrollPosition], 0, 5, eRepeat, eNoBlock);
}

function ScrollRight()
{
  if(scrollPosition == findMaxScrollPosition())
  {
    scrollPosition = 0;
  } else {
    scrollPosition++;
  }
  btnCharacterChoice.Animate(buttonGraph[scrollPosition], 0, 5, eRepeat, eNoBlock);
}

